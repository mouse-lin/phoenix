HOST: http://youyanchu.gaiamagic.com/api/v1

--- API for youyanchu.com ---
---
## API 地址

当前 API 版本为 `v1`

完整访问地址：`http://<web_site>/api/<version>/<resource>`，例如：`http://youyanchu.com/api/v1/performances`

## Token

Token 需要通过 http header 的 `X-USER-ACCESS-TOKEN` 发送

## 分页
多页（读取数据列表）时分页参数为： 页码（默认为 1）：page，每页记录数量（默认为 20）：per  
建议对分页参数显式传值，以免后期默认值可能会修改。
---

--
Performance 演出列表
--

获取所有演出列表
GET /performances
{ 
  page: "页数", // 默认为1
  district: "城市名字" // 默认为"全国"
}
< 200
[
  {
    "id": 演出列表id,
    "progress": "状态",
    "areas": [ "河南", "郑州" ],
    "address": "地址",
    "genre": "曲风",
    "kind": "演出类型",
    "bands_list": "乐队",   // 过时字段，应该改为使用musicians
    "title": "演出列表标题",
    "description": "描述",
    "begin_at": "开始时间", // 过时字段，应该改为使用timetables
    "end_at": "结束时间",,  // 过时字段，应该改为使用timetables
    "city": "城市",
    "location": "场地",
    "poster": "演出海报(大)",
    "poster_thumb": "演出海报(小)",
    "albums_count": 相册数量,
    "favorites_count": 收藏人数,
    "tickets_count": 门票数量,
    "wants_count": 感兴趣人数,
    "interests_count": 要去的人数,
    "willing_count": 好友关注数,
    "favorite_id": null,
    "ticket": "门票价格",
    "is_wanted": 是否想去(true : false),
    "is_interested": 是否感兴趣(true : false),
    "with_limited_tickets": true, // 是否有抢票的票务设置
    "coordinate": {
        // 坐标
        "lat": "34.7644",
        "lng": "113.66924"
    },
    "musicians": [
      { //具体参考musicians返回 },
      {  }
    ],
    "timetables": [
      {
        begin_at: "2014-03-01T18:00:00+08:00",
        end_at: "2014-03-01T21:00:00+08:00"
      }
    ]
  },
  {  },
  ...
]

获取某个演出
GET /performances/:id
< 200
{
  "id": 演出列表id,
  "progress": "状态",
  "areas": [
      "河南",
      "郑州"
  ],
  "address": "地址",
  "genre": "曲风",
  "kind": "演出类型",
  "bands_list": "乐队",
  "title": "演出列表标题",
  "description": "描述",
  "begin_at": "开始时间",
  "end_at": "结束时间",
  "city": "城市",
  "location": "场地",
  "coordinate": {
      // 坐标
      "lat": "34.7644",
      "lng": "113.66924"
  },
  "poster": "演出海报(大)",
  "poster_thumb": "演出海报(小)",
  "albums_count": 相册数量,
  "favorites_count": 收藏人数,
  "tickets_count": 门票数量,
  "wants_count": 感兴趣人数,
  "interests_count": 要去的人数,
  "friends_count": 好友关注数,
  "favorite_id": null,
  "ticket": "门票价格",
  "is_wanted": 是否想去(true : false),
  "is_interested": 是否感兴趣(true : false),
  "musicians": [
    { //具体参考musicians返回 },
    {  }
  ],
  "timetables": [
    {
      begin_at: "2014-03-01T18:00:00+08:00",
      end_at: "2014-03-01T21:00:00+08:00"
    }
  ],
  "ticket_settings": [
    {
      id: 8,
      name: "票名",
      quota: 20, // 剩余票数，当为null时表示不限票数
      price: 9.9, // 单位：元
      note: "备注",
      kind: "electronic", // 票务类型，electronic: 电子票，entity: 实体票，scene: 现场票
      is_bundle: false,   // 是否套票
      is_limited_version, // 是否抢票
      limited_number: 2,  // 抢票限制，0则表示不限制，is_limited_version为true时才返回
      expire_time: 30,    // 付款时限，单位分钟。下单后超过这个时限，订单会自动变为 expired 状态
      available_at: "2014-01-25T00:00:00+08:00", // 门票使用时间，非套票时才有这个字段
      begin_at: "2014-01-07T10:47:00+08:00", // 售票开始时间
      end_at: "2014-01-25T00:00:00+08:00" // 售票结束时间
    },
    { },
    ...
  ]
}

获取要去某个演出的用户
GET /performances/:performance_id/wanted_fans
{
  type: 'followed', // (可选, 只返回登录用户已关注的Fans)
  page: 1,
  per: 10
}
< 200
[
  { // 数据参考Fan }
]

获取对某个演出感兴趣的用户
GET /performances/:performance_id/interested_fans
{
  type: 'followed', // (可选, 只返回登录用户已关注的Fans)
  page: 1,
  per: 10
}
< 200
[
  { // 数据参考Fan }
]

--
City 热门城市
--
GET /cities
< 200
{ 
  cities: [
    // 热门城市
    "北京",
    "上海"
  ]
}

--
Feature 专题
--
获取所有专题，只取权值最高3个专题
GET /features
< 200
[
  { 
    id: "专题id",
    title: "专题标题",
    description: "专题描述",
    banner_small: "专题小图片",
    banner: "专题大横幅",
  },
  { },
  ...
]

单个专题展示
GET /features/:id
< 200
{ 
  id: "专题id",
  title: "专题标题",
  description: "专题描述",
  banner_small: "专题小图片",
  banner: "专题大横幅",
  performances: [
    { 
      //具体参考 /performances 里面参数返回
    },
    {  },
    ...
  ]
}

--
User 用户
--
weibo登录

POST /fans/sns_login
{ 
  uid: uid,
  nickname: nickname,
  avatar: avatar,
  token: token,
  provider: provider
}
< 200
{ 
  id: 用户id,
  nickname: 用户姓名,
  auth_token: 登录token,
  email: 用户email,
  cellphone: 手机号码,
  avatar: 用户头像,
}
//登录失败
{{ "success": false, "message": "uid or provider must be provide" }, "status": 400 }

获取登录用户信息
GET /fan
< 200
{
  id: '',
  email: '',
  nickname: '',
  cellphone: '',
  avatar: ''
}

--
Follow 关注

关注所有api都需要用户登录(auth_token), 具体参考最上面用户登录auth_token参数校验
--
关注列表

GET /follows
每页返回10条数据
{ 
  page: 页码,
}
< 200
[
  { //具体参考 /performances 里面参数返回  },
  ...
]

想去

POST /follows/want
{ 
  performance_id: 演出id
}
< 200
{ success: true }
//失败 
{ success: false, message: "验证不通过", errors: { "具体信息" } }

删除想去
DELETE /follows/want
{ 
  performance_id: 演出id
}
< 200
{ success: true }
//失败 
{ success: false }

感兴趣

POST /follows/interest
{ 
  performance_id: 演出id
}
< 200
{ success: true }
//失败 
{ success: false, message: "验证不通过", errors: { "具体信息" } }

删除感兴趣
DELETE /follows/interest
{ 
  performance_id: 演出id
}
< 200
{ success: true }
//失败 
{ success: false }

--
Order 订单

此类别下的所有接口都需要用户登录
--

登录用户的订单列表

GET /orders
{
  // `status` 参数可能的值为 `unpaid` `paid` `expired` `refunding` `refunded` `shipped`
  // 传入数组则表示查询多种状态： ['unpaid', 'paid']
  // 如果不设置此值，则表示获取所有订单
  status: 'unpaid'
}
< 200
[
  {
    id: 1,
    masked_cellphone: '13412345678',
    quantity: 10,
    price: '10.00',
    total: '100.00',
    status: 'unpaid', // unpaid: 未付款, paid: 已付款, refunding: 退款中, refunded: 已退款, expired: 已超时, shipped: 已发货
    number: 'b326646e3a95156c7271', // 订单号
    is_buyable: true,
    created_at: '2014-01-07T15:21:00+08:00',
    updated_at: '2014-01-07T15:21:00+08:00',
    expired_at: '2014-01-07T15:51:00+08:00',
    paid_at: '',      // 付款后才有此字段
    refunding_at: '', // 正在退款中才有此字段
    refunded_at: '',  // 退款后才有此字段
    ticket_setting: {
      id: 2,
      name: '票名',
      kind: "electronic", // 票务类型，electronic: 电子票，entity: 实体票
      expire_time: 30,    // 付款时限，单位分钟。下单后超过这个时限，订单会自动变为 expired 状态
      is_bundle: false,   // 是否套票
      shipping_fee: 12,   // 运费，单位：元。实体票才会返回些字段
      available_at: '2014-01-07T15:21:00+08:00' // 门票使用时间，非套票时才有这个字段
    },
    performance: {
      id: 1,
      title: 'title',
      areas: ['广东', '广州'],
      begin_at: "开始时间",
      location: "场地",
      poster: 'poster url',
      contact_phone: '票务联系电话'
    }
  }
]

查询登录用户的订单

GET /orders/:order_id
< 200
{
  id: 1,
  masked_cellphone: '13412345678',
  quantity: 10,
  price: '10.00',
  total: '100.00',
  status: 'unpaid',
  number: 'b326646e3a95156c7271', // 订单号
  is_buyable: true,
  created_at: '2014-01-07T15:21:00+08:00',
  updated_at: '2014-01-07T15:21:00+08:00',
  expired_at: '2014-01-07T15:51:00+08:00',
  paid_at: ''      // 付款后才有此字段
  refunding_at: '' // 正在退款中才有此字段
  refunded_at: ''  // 退款后才有此字段
  ticket_numbers: [
    '5255167707',
    '7693752915'
  ],
  ticket_setting: {
    id: 2,
    name: '票名',
    kind: "electronic", // 票务类型，electronic: 电子票，entity: 实体票
    is_bundle: false,   // 是否套票
    shipping_fee: 12,   // 运费，单位：元。实体票才会返回些字段
    available_at: '2014-01-07T15:21:00+08:00' // 门票使用时间，非套票时才有这个字段
  },
  performance: {
    id: 1,
    title: 'title',
    areas: ['广东', '广州'],
    begin_at: "开始时间",
    location: "场地",
    poster: 'poster url',
    contact_phone: '票务联系电话'
  }
}

获取订单的支付宝WAP支付地址
GET /orders/:order_id/alipay_wap
< 200
{ url: 'xxx' }

创建订单

POST /orders
{
  quantity: 10, // 票数
  cellphone: '13412345678',
  ticket_setting_id: 1, // 票务类型id
  address_id: 2 // 如果购买的是实体票，需要传入配送地址
}
< 200
{
  id: 1,
  masked_cellphone: '13412345678',
  quantity: 10,
  price: '10.00',
  total: '100.00',
  status: 'unpaid',
  number: 'b326646e3a95156c7271', // 订单号
  is_buyable: true,
  created_at: '2014-01-07T15:21:00+08:00',
  updated_at: '2014-01-07T15:21:00+08:00',
  expired_at: '2014-01-07T15:51:00+08:00',
  ticket_numbers: ['5255167707', '7693752915']
}

--
Address 配送地址

此类别下的所有接口都需要用户登录
--

登录用户的配送地址列表

GET /addresses
< 200
[
  {
    recipient: '收件人',
    cellphone: '13811111111',
    destination: '地址',
    zipcode: '邮政编码'
  }
]

查询登录用户的配送地址

GET /addresses/:address_id
< 200
{
  recipient: '收件人',
  cellphone: '13811111111',
  destination: '地址',
  zipcode: '邮政编码'
}

创建配送地址

POST /addresses
{
  recipient: '收件人',
  cellphone: '13811111111',
  destination: '地址',
  zipcode: '邮政编码'
}
< 200
{
  recipient: '收件人',
  cellphone: '13811111111',
  destination: '地址',
  zipcode: '邮政编码'
}

删除登录用户的配送地址

DELETE /addresses/:address_id
< 204

--
Setting 用户设置

接口都需要用户登录
--

邮箱绑定
POST /fan/setting/email
{
  email: '邮箱'
}
< 204

手机绑定
POST /fan/setting/cellphone
{
  cellphone: '手机号码'
}
< 204

重新发送手机验证码
POST /fan/setting/resend_phone_token
< 204

验证码确认
POST /fan/setting/verify_phone_token
{ 
  token: "手机验证码"
}
< 200
{
  cellphone: "新手机号码"
}

--
Musician 音乐人

--

获取音乐人列表
GET /musicians
{ 
  query: "搜索条件(姓名检索)"
}
< 200
{ 
  id: id
  avatar: "头像url",
  name: "姓名",
  followed: true
}

获取推荐音乐人
GET /musicians/recommended
{
  type: 'unfollowing' // 只返回登录用户未关注的
}
< 200
[
  { 
    id: id
    avatar: "头像url",
    name: "姓名",
    followed: true
  }
]

关注音乐人列表(需要用户登录)
GET /musicians/followed_list
< 200
{ 
  返回类型参考musicians
}

关注音乐人(需要用户登录)
POST /musicians/:musician_id/follow
< 204

取消关注音乐人(需要用户登录)
DELETE /musicians/:musician_id/follow
< 204
